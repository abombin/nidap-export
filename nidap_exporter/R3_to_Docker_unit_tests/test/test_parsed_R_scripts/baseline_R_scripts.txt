source("../download_tools.R")
key<-Sys.getenv("key")
rds_output<-"./Unit_test_pipeline/rds_output"
if (file.exists(rds_output)!=1) {
dir.create(rds_output,showWarnings = FALSE)}
rid="ri.foundry.main.dataset.d6d40105-1dd4-417f-9066-6896b55fb3d2"
branch="master"
var_Dataset_1files<-pullnidap_raw(key=key,rid=rid,branch=branch)
var_Dataset_1<-figure_out_nidap_files(var_Dataset_1files)
saveRDS(var_Dataset_1,"./Unit_test_pipeline/rds_output/var_Dataset_1.rds")
rid="ri.foundry.main.dataset.078693cc-2e38-4c1a-b4b5-8bc59ed9e10d"
branch="master"
var_Dataset_2files<-pullnidap_raw(key=key,rid=rid,branch=branch)
var_Dataset_2<-figure_out_nidap_files(var_Dataset_2files)
saveRDS(var_Dataset_2,"./Unit_test_pipeline/rds_output/var_Dataset_2.rds")
Process_1_1 <- function(Dataset_1) {
    print("Topological order: 1.1")
    print("Save as dataset")

    
    print('sample_metadata <-') # Test string 1
    print('"Process_1_1.png"') # Test string 2
    print('') # Test string 3
    print('orthology_table %>% dplyr::rename("orthology_reference" = orthology_reference_column) %>%') # Test string 4
    print('"dplyr::withColumnRenamed\\(orthology_conversion_column, "orthology_conversion"\\) %>% dplyr::select\\("orthology_reference", "orthology_conversion"\\) -> orthology_table"') # Test string 5
    print('`%in%`') # Test string 6
    print('dplyr::') # Test string 7
library(dplyr)
    print('output_fs\\$open') # Test string 9
    print('\\$get_path') # Test string 10
# auto removed:     print('new.output()') # Test string 11
    print('$fileSystem\\') # Test string 12
    

    return(Dataset_1)    
}

print("template_function_Process_1_1.R #########################################################################")
library(plotly);library(ggplot2);library(jsonlite);
currentdir <- getwd()
rds_output <- paste0(currentdir,'/rds_output')
var_Dataset_1<-readRDS(paste0(rds_output,"/var_Dataset_1.rds"))
var_Dataset_1<-as.data.frame(var_Dataset_1)
invisible(graphics.off())
var_Process_1_1<-Process_1_1(var_Dataset_1)
invisible(graphics.off())
saveRDS(var_Process_1_1, paste0(rds_output,"/var_Process_1_1.rds"))
Process_1_2 <- function(Dataset_1) {
    print("Topological order: 1.2")

    nodal_name <- "topo_order_1_2"
    x <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
    y <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
    plot(x,y)
    png(filename=paste0(nodal_name,"_output.png"))
    dev.off()

    return(Dataset_1)    
}

print("template_function_Process_1_2.R #########################################################################")
library(plotly);library(ggplot2);library(jsonlite);
currentdir <- getwd()
rds_output <- paste0(currentdir,'/rds_output')
var_Dataset_1<-readRDS(paste0(rds_output,"/var_Dataset_1.rds"))
var_Dataset_1<-as.data.frame(var_Dataset_1)
invisible(graphics.off())
var_Process_1_2<-Process_1_2(var_Dataset_1)
invisible(graphics.off())
saveRDS(var_Process_1_2, paste0(rds_output,"/var_Process_1_2.rds"))
Process_1 <- function(Dataset_2, Dataset_1) {
    print("Topological order: 1")
    print("Save as dataset")

    
    nodal_name <- "topo_order_1"
    x <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
    y <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
    plot(x,y)
    png(filename=paste0(nodal_name,"_output.png"))
    dev.off()

    return(Dataset_1)    
}

print("template_function_Process_1.R #########################################################################")
library(plotly);library(ggplot2);library(jsonlite);
currentdir <- getwd()
rds_output <- paste0(currentdir,'/rds_output')
var_Dataset_2<-readRDS(paste0(rds_output,"/var_Dataset_2.rds"))
var_Dataset_2<-as.data.frame(var_Dataset_2)
currentdir <- getwd()
rds_output <- paste0(currentdir,'/rds_output')
var_Dataset_1<-readRDS(paste0(rds_output,"/var_Dataset_1.rds"))
var_Dataset_1<-as.data.frame(var_Dataset_1)
invisible(graphics.off())
var_Process_1<-Process_1(var_Dataset_2,var_Dataset_1)
invisible(graphics.off())
saveRDS(var_Process_1, paste0(rds_output,"/var_Process_1.rds"))
Process_2 <- function(Process_1) {
    print("Topological order: 2")

    return(Process_1)    
}

print("template_function_Process_2.R #########################################################################")
library(plotly);library(ggplot2);library(jsonlite);
currentdir <- getwd()
rds_output <- paste0(currentdir,'/rds_output')
var_Process_1<-readRDS(paste0(rds_output,"/var_Process_1.rds"))
var_Process_1<-as.data.frame(var_Process_1)
invisible(graphics.off())
var_Process_2<-Process_2(var_Process_1)
invisible(graphics.off())
saveRDS(var_Process_2, paste0(rds_output,"/var_Process_2.rds"))
Process_3_1 <- function(Process_2) {
    print("Topological order: 3.1")
    print("Save as dataset")

    nodal_name <- "topo_order_3_1"
    x <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
    y <- x * 2
    plot(x,y)
    png(filename=paste0(nodal_name,"_output.png"))
    dev.off()
    return(Process_2)    
}

print("template_function_Process_3_1.R #########################################################################")
library(plotly);library(ggplot2);library(jsonlite);
currentdir <- getwd()
rds_output <- paste0(currentdir,'/rds_output')
var_Process_2<-readRDS(paste0(rds_output,"/var_Process_2.rds"))
var_Process_2<-as.data.frame(var_Process_2)
invisible(graphics.off())
var_Process_3_1<-Process_3_1(var_Process_2)
invisible(graphics.off())
saveRDS(var_Process_3_1, paste0(rds_output,"/var_Process_3_1.rds"))
Process_3 <- function(Process_2) {
    print("Topological order: 3")

    
    return(Process_2)    
}

print("template_function_Process_3.R #########################################################################")
library(plotly);library(ggplot2);library(jsonlite);
currentdir <- getwd()
rds_output <- paste0(currentdir,'/rds_output')
var_Process_2<-readRDS(paste0(rds_output,"/var_Process_2.rds"))
var_Process_2<-as.data.frame(var_Process_2)
invisible(graphics.off())
var_Process_3<-Process_3(var_Process_2)
invisible(graphics.off())
saveRDS(var_Process_3, paste0(rds_output,"/var_Process_3.rds"))
Process_4 <- function(Process_3) {
    print("Topological order: 4")
    print("Save as dataset")

    nodal_name <- "topo_order_4"
    x <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
    y <- x * 3
    plot(x,y)
    png(filename=paste0(nodal_name,"_output.png"))
    dev.off()
    return(Process_3)    
}

print("template_function_Process_4.R #########################################################################")
library(plotly);library(ggplot2);library(jsonlite);
currentdir <- getwd()
rds_output <- paste0(currentdir,'/rds_output')
var_Process_3<-readRDS(paste0(rds_output,"/var_Process_3.rds"))
var_Process_3<-as.data.frame(var_Process_3)
invisible(graphics.off())
var_Process_4<-Process_4(var_Process_3)
invisible(graphics.off())
saveRDS(var_Process_4, paste0(rds_output,"/var_Process_4.rds"))
source("../download_tools.R")
key<-Sys.getenv("key")
report<-list()
currentdir <- getwd()
rds_output <- paste0(currentdir,"/rds_output")
rid="ri.foundry.main.dataset.5e2cd52f-99ee-49e8-9ab6-804da37ae47c"
report["var_Process_1"]<-'no comparison'
try({
branch="master"
var_Process_1files<-pullnidap_raw(key=key,rid=rid,branch=branch)
var_Process_1_target<-figure_out_nidap_files(var_Process_1files)
var_Process_1_new<-readRDS(paste0(rds_output,"/var_Process_1.rds"))
report["var_Process_1"]<-report_differences(var_Process_1_target,var_Process_1_new)
},silent=TRUE)
print(report["var_Process_1"])
###################################
rid="ri.foundry.main.dataset.2febf5cd-3958-4a74-ba01-a44f988ff0f2"
report["var_Process_1_1"]<-'no comparison'
try({
branch="master"
var_Process_1_1files<-pullnidap_raw(key=key,rid=rid,branch=branch)
var_Process_1_1_target<-figure_out_nidap_files(var_Process_1_1files)
var_Process_1_1_new<-readRDS(paste0(rds_output,"/var_Process_1_1.rds"))
report["var_Process_1_1"]<-report_differences(var_Process_1_1_target,var_Process_1_1_new)
},silent=TRUE)
print(report["var_Process_1_1"])
###################################
rid="ri.vector.main.execute.c39dc46c-63a1-4d21-9920-c3abc291b332"
report["var_Process_1_2"]<-'no comparison'
try({
branch="master"
var_Process_1_2files<-pullnidap_raw(key=key,rid=rid,branch=branch)
var_Process_1_2_target<-figure_out_nidap_files(var_Process_1_2files)
var_Process_1_2_new<-readRDS(paste0(rds_output,"/var_Process_1_2.rds"))
report["var_Process_1_2"]<-report_differences(var_Process_1_2_target,var_Process_1_2_new)
},silent=TRUE)
print(report["var_Process_1_2"])
###################################
rid="ri.vector.main.execute.6f68e3a5-ebf5-4fc0-97a7-753d87eecd69"
report["var_Process_2"]<-'no comparison'
try({
branch="master"
var_Process_2files<-pullnidap_raw(key=key,rid=rid,branch=branch)
var_Process_2_target<-figure_out_nidap_files(var_Process_2files)
var_Process_2_new<-readRDS(paste0(rds_output,"/var_Process_2.rds"))
report["var_Process_2"]<-report_differences(var_Process_2_target,var_Process_2_new)
},silent=TRUE)
print(report["var_Process_2"])
###################################
rid="ri.vector.main.execute.70a499d0-f9cd-4230-bf4b-2198bde81c40"
report["var_Process_3"]<-'no comparison'
try({
branch="master"
var_Process_3files<-pullnidap_raw(key=key,rid=rid,branch=branch)
var_Process_3_target<-figure_out_nidap_files(var_Process_3files)
var_Process_3_new<-readRDS(paste0(rds_output,"/var_Process_3.rds"))
report["var_Process_3"]<-report_differences(var_Process_3_target,var_Process_3_new)
},silent=TRUE)
print(report["var_Process_3"])
###################################
rid="ri.foundry.main.dataset.66e03eaa-2a47-49dd-ba1a-20eea7c859e9"
report["var_Process_3_1"]<-'no comparison'
try({
branch="master"
var_Process_3_1files<-pullnidap_raw(key=key,rid=rid,branch=branch)
var_Process_3_1_target<-figure_out_nidap_files(var_Process_3_1files)
var_Process_3_1_new<-readRDS(paste0(rds_output,"/var_Process_3_1.rds"))
report["var_Process_3_1"]<-report_differences(var_Process_3_1_target,var_Process_3_1_new)
},silent=TRUE)
print(report["var_Process_3_1"])
###################################
rid="ri.foundry.main.dataset.620aad22-ba43-4003-b1a8-ef6aba4d12e7"
report["var_Process_4"]<-'no comparison'
try({
branch="master"
var_Process_4files<-pullnidap_raw(key=key,rid=rid,branch=branch)
var_Process_4_target<-figure_out_nidap_files(var_Process_4files)
var_Process_4_new<-readRDS(paste0(rds_output,"/var_Process_4.rds"))
report["var_Process_4"]<-report_differences(var_Process_4_target,var_Process_4_new)
},silent=TRUE)
print(report["var_Process_4"])
###################################
